#==================================Imports=======================================
from tkinter import *
import random
import winsound
import time
#import pygame
import os
import threading
from threading import Thread

#============================= Variables globales ===============================
posiciones=[[0,100,200,300,400],[0,100,200,300,400,500,600,700,800,900,1000]] #La primera sublista son las posiciones en X, la segunda en Y
monedas=150
enemigos=[]
torres=[]


#=========================== Definición de clases ===============================

class Avatars(): #Esta clase es la base para crar a los avatar
	pass
	global posiciones
	global archerImg
	

	def __init__(self, ataque, resistencia, tiempoEspera, tiempoAtaque, sprite):
		self.ataque = ataque
		self.resistencia = resistencia
		self.tiempoEspera = tiempoEspera
		self.tiempoAtaque = tiempoAtaque
		self.posx = posiciones[0][random.randint(0,4)]
		self.sprite=LoadImage(sprite)

		self.enPantalla = False
		self.posy=600
		self.velocidad=5
		self.monedasObtenidas=75

	def avanzar(self):
		n=self.posy-100

		while (self.posy>=self.posy-100*n) and self.posy>-100:
			self.posy-=self.velocidad
			self.sprite.place(x=self.posx, y=self.posy)

			time.sleep(0.2)

			if self.posy<n:
				time.sleep(self.tiempoEspera-0.2)
				n-=100

			#print("La posicion del avatar es {} y en x {}".format(self.posy, self.posx))


#=============================== Rooks ======================================

class Rooks():	#Esta clase es la base para crear los rooks
	def __init__(self, precio, potenciaAtaque,resistencia,generarRook,sprite):
		self.precio = precio
		self.resistencia = resistencia
		self.potenciaAtaque = potenciaAtaque
		self.generarRook = generarRook 

		self.sprite = LoadImage(sprite)
		self.frecuenciaAtaque = 10

	def agregar(self):
		pass

	def eliminar(self):
		pass



#====================================== Funciones ==========================================

def crear_avatars(cantidad_enemigos, n):	#Crea el avatar especificado
	global enemigos
	#n=random.randint(1,4)

	#for i in range(20):
	if n==1:
		avatar_creado = Avatars(2, 5,12,10,"arquero.png")
	if n==2:
		avatar_creado = Avatars(3,10,10,15,"escudero.png")
	if n==3:
		avatar_creado = Avatars(9,20,13,5,"lenador.png")
	if n==4:
		avatar_creado = Avatars(12,25,14,3,"canibal.png")

	enemigos.append(avatar_creado)

	for i in range(len(enemigos)):
		enemigos[i].sprite.place(x=enemigos[i].posx, y=enemigos[i].posy)
		#print(enemigos[i].ataque)
		#time.sleep(4)
	#hilo1()

def LoadImage(sprite):	#Retorna la imagen en con el nombre especificado
	route = os.path.join(sprite)
	imageImg = PhotoImage(file=route)
	image = Label(master, image=imageImg,  borderwidth=0)

	return image

def juego():	#Ejecuta los elementos generales del juego
	global enemigos
	global torres
	juegoIniciado=True
	#n=archer.posy-100

	while juegoIniciado:
		time.sleep(0.5)
		"""	for i in range(len(enemigos)):
				enemigos[i].enPantalla=True"""

		crear_avatars(20,random.randint(1,4))	#Crea un avatar luego de completar una iteración
		
		for n in range(len(enemigos)):	#Mueve los avatar
			time.sleep(0.01)
			enemigos[n].posy-=enemigos[n].velocidad
			enemigos[n].sprite.place(x=enemigos[n].posx, y=enemigos[n].posy)
			



			if enemigos[n].posy<=0:	#Termina el juego si algún avatar llega al otro lado de la pantalla
				juegoIniciado=False
				break


		"""if (archer.posy>=archer.posy-100*n) and archer.posy>-100:
				archer.posy-=archer.velocidad
				archer.sprite.place(x=archer.posx, y=archer.posy)
				time.sleep(0.2)
				
				if archer.posy<n:
					time.sleep(archer.tiempoEspera-0.2)
					n-=100
				
				if n==0:
					break"""

		"""if 
			Rooks(50, 2, 12,False,"SandRook.png")
			Rooks(100, 4, 14,False,"RockRook.png")
			Rooks(150, 8, 16,False,"FireRook.png")
			Rooks(150, 8, 16,False,"WaterRook.png")"""

def hilo1():
    t1 = Thread(target=juego, args=())
    t1.start()
#=============================== Definición de la ventana ================================== 


master = Tk()
master.title("Proyecto 2")
master.geometry("800x600")
master.configure(bg="black")
master.resizable(False, False)

def ventana(): #Crea la ventana en donde se va a ejecutar el juego

	master.geometry("650x720")
	master.configure(bg="white")
	w = Canvas(master, width=500, height=900, bg="blue")
	w.place(x=0,y=0)

	for i in range(5):
		lineX = w.create_rectangle(i*100,0,i*100,900,fill="black")

    for j in range(10):
    	lineY = w.create_rectangle(0,j*100,900,j*100,fill="black")
    
#============================== Definición de botones =================================================
def Help():
    def Back():
        bot.place(x=338, y=200)
        bot2.place(x=345, y=300)
        bot5.place(x=320, y=400)
        bot4.place(x=320, y=500)
        exit1.place_forget()
        label.place_forget()
        label2.place_forget()

    bot.place_forget()
    bot2.place_forget()
    bot4.place_forget()
    label.place(x=240, y=0)
    label2.place(x=10, y=300)
    exit1 = Button(master, text="Back to\nmenu", fg="blue", bg="lightgrey", font=("Gill Sans Ultra Bold", 12, "bold")
                  ,justify=CENTER, command=Back)
    exit1.place(x=700, y=540)

def Credits():
    def Back():
        bot.place(x=338, y=200)
        bot2.place(x=345, y=300)
        bot5.place(x=320, y=400)
        bot4.place(x=320, y=500)
        exit2.place_forget()
        label3.place_forget()
        label4.place_forget()
    bot.place_forget()
    bot2.place_forget()
    bot4.place_forget()
    bot5.place_forget()
    label3.place(x=300, y=0)
    label4.place(x=200, y=100)
    exit2 = Button(master, text="Back to\nmenu",fg="blue", bg="lightgrey", font=("Gill Sans Ultra Bold", 12, "bold"),
                  justify=CENTER, command=Back)
    exit2.place(x=700, y=540)

def Highscores():
    def Back():
        pos1.place_forget()
        pos2.place_forget()
        pos3.place_forget()
        pos4.place_forget()
        pos5.place_forget()
        pos6.place_forget()
        pos7.place_forget()
        exit3.place_forget()
        bot.place(x=338, y=200)
        bot2.place(x=345, y=300)
        bot5.place(x=320, y=400)
        bot4.place(x=320, y=500)
    bot.place_forget()
    bot2.place_forget()
    bot4.place_forget()
    bot5.place_forget()
    list_scores = ReadFile()
    exit3 = Button(master, text="Back to\nmenu", fg="blue", bg="lightgrey", font=("Gill Sans Ultra Bold", 12, "bold"),
                  justify=CENTER, command=Back)
    exit3.place(x=700, y=540)

    pos1 = Message(
        text="1. " + list_scores[0].split(",")[0] + ", " + list_scores[0].split(",")[1] + " points " + "Level: " +
             list_scores[0].split(",")[2], fg="gold", bg="black", font=("Comic Sans MS", 20, "bold"), justify=CENTER,
        width=1000)
    pos1.place(x=5, y=200)  # Score #1

    pos2 = Message(
        text="2. " + list_scores[1].split(",")[0] + ", " + list_scores[1].split(",")[1] + " points " + "Level: " +
             list_scores[1].split(",")[2], fg="gold", bg="black", font=("Comic Sans MS", 20, "bold"), justify=CENTER,
        width=1000)
    pos2.place(x=5, y=250)  # Score #2

    pos3 = Message(
        text="3. " + list_scores[2].split(",")[0] + ", " + list_scores[2].split(",")[1] + " points " + "Level: " +
             list_scores[2].split(",")[2], fg="gold", bg="black", font=("Comic Sans MS", 20, "bold"), justify=CENTER,
        width=1000)
    pos3.place(x=5, y=300)  # Score #3

    pos4 = Message(
        text="4. " + list_scores[3].split(",")[0] + ", " + list_scores[3].split(",")[1] + " points " + "Level: " +
             list_scores[3].split(",")[2], fg="gold", bg="black", font=("Comic Sans MS", 20, "bold"), justify=CENTER,
        width=1000)
    pos4.place(x=5, y=350)  # Score #4

    pos5 = Message(
        text="5. " + list_scores[4].split(",")[0] + ", " + list_scores[4].split(",")[1] + " points " + "Level: " +
             list_scores[4].split(",")[2], fg="gold", bg="black", font=("Comic Sans MS", 20, "bold"), justify=CENTER,
        width=1000)
    pos5.place(x=5, y=400)  # Score #5

    pos6 = Message(
        text="6. " + list_scores[5].split(",")[0] + ", " + list_scores[5].split(",")[1] + " points " + "Level: " +
             list_scores[5].split(",")[2], fg="gold", bg="black", font=("Comic Sans MS", 20, "bold"), justify=CENTER,
        width=1000)
    pos6.place(x=5, y=450)  # Score #6

    pos7 = Message(
        text="7. " + list_scores[6].split(",")[0] + ", " + list_scores[6].split(",")[1] + " points " + "Level: " +
             list_scores[6].split(",")[2], fg="gold", bg="black", font=("Comic Sans MS", 20, "bold"), justify=CENTER,
        width=1000)
    pos7.place(x=5, y=500)  # Score #7



def ReadFile():
    path="Scores.txt"
    archive= open(path)
    content=archive.readlines()
    archive.close()
    return content




bot = Button(master, text="Login", fg="blue", bg="lightgrey", font=("Gill Sans Ultra Bold", 20, "bold"), justify=CENTER, command=ventana)
bot.place(x=338, y=200)
bot2 = Button(master, text="Help", fg="blue", bg="lightgrey", font=("Gill Sans Ultra Bold", 20, "bold"), justify=CENTER, command=Help)
bot2.place(x=345, y=300)
bot4 = Button(master, text="Credits", fg="blue", bg="lightgrey", font=("Gill Sans Ultra Bold", 20, "bold"), justify=CENTER, command=Credits)
bot4.place(x=320, y=500)
bot5 = Button(master, text="Highscores", fg="blue", bg="lightgrey", font=("Gill Sans Ultra Bold", 20, "bold"), justify=CENTER, command=Highscores)
bot5.place(x=320, y=400)
label = Label(text="How to play", font=("Forte", 45, "bold"), bg="black", fg="green")
label3 = Label(text="Credits", font=("Forte", 45, "bold"),bg="black", fg="green")
label4 = Label(text="""Costa Rica

Instituto Tecnológico de Costa Rica

Ingeniería en Computadores 

Taller de Programación Grupo 03

Prof. Leonardo Araya

Versión alpha alv

Christopher Jesus Castro
Alí José Daniels
Andony Joel Gómez

2020""", font=("Forte", 18, "bold"))
label2 = Label(text="""El juego comenzara en el momento en el que se oprima el botón de login, en
este momento los "Avatars" empezaran a salir de la parte inferior de la
pantalla, cada "Avatar" posee poderes y todos los "Avatars" dejan un total
de alrededor de 75 monedas para que el jugador pueda usar para seguir
jugando, el objetivo principal del juego es no dejar que estos "Avatars"
lleguen a la parte superior de la pantalla, para eso el jugador tiene a la
dispocisión los "Rooks", los "Rooks" son personajes que el jugador puede
colocar en cada casilla a cambio de dinero, cada "Rook" cuesta diferente,
debido a que poseen poderes diferentes. Por último el dinero se estara
generando periódicamente en valores de 25,50,100. Suerte :)""", font=("Gill Sans Ultra Bold", 12))

master.mainloop()
